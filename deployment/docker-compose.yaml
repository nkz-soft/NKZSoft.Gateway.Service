volumes:
  postgres-data:

services:
  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=postgres pg_isready -U postgres -h postgres"]
      interval: 10s
      timeout: 5s
      retries: 15

  keycloak:
    image: quay.io/keycloak/keycloak:26.3.1
    container_name: keycloak
    command:
      - start-dev
      - --import-realm
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://${KEYCLOAK_POSTGRES_HOST}:5432/${KEYCLOAK_DATABASE_NAME}
      KC_DB_USERNAME: ${KEYCLOAK_DATABASE_USERNAME}
      KC_DB_PASSWORD: ${KEYCLOAK_DATABASE_PASSWORD}
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_USER}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD}
      KC_HTTP_RELATIVE_PATH: /auth
      PROXY_ADDRESS_FORWARDING: "true"
      KC_HEALTH_ENABLED: "true"
      KC_HTTP_MANAGEMENT_PORT: "9000"
    volumes:
      - ./keycloak/realm-test.json:/opt/keycloak/data/import/realm-test.json
    ports:
      - 0.0.0.0:8080:8080

    healthcheck:
      test: |
        bash -c '
          exec 3<>/dev/tcp/localhost/9000;
          printf "GET /auth/health/ready HTTP/1.1\r\nHost: localhost:9000\r\nConnection: close\r\n\r\n" >&3;
          timeout 5s cat <&3 | grep -q "\"status\": \"UP\"" && exit 0 || exit 1
        '
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      postgres:
        condition: service_healthy

  gateway-service:
    build:
      context: ../src/NKZSoft.Gateway.API
      dockerfile: Dockerfile
    container_name: gateway-service
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
    ports:
      - 0.0.0.0:5000:80
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:80/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 15
    depends_on:
      keycloak:
        condition: service_healthy

  data-service:
    build:
      context: ../src/NKZSoft.Data.API
      dockerfile: Dockerfile
    container_name: data-service
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
    ports:
      - 0.0.0.0:5050:80
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:80/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 15
    depends_on:
      keycloak:
        condition: service_healthy
